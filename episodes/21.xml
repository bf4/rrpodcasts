<item>
		<title>019 RR Book Club: Exceptional Ruby</title>
		<link>http://feedproxy.google.com/~r/RubyRogues/~3/47xBBWYT6sM/</link>
		<comments>http://rubyrogues.com/book-club-exceptional-ruby/#comments</comments>
		<pubDate>Sat, 10 Sep 2011 17:05:11 +0000</pubDate>
		<dc:creator>chuck@teachmetocode.com (Charles Max Wood)</dc:creator>
				<category><![CDATA[Avdi Grimm]]></category>
		<category><![CDATA[Book Club]]></category>
		<category><![CDATA[Charles Max Wood]]></category>
		<category><![CDATA[Errors/Exceptions]]></category>
		<category><![CDATA[James Edward Gray II]]></category>
		<category><![CDATA[Josh Susser]]></category>
		<category><![CDATA[Steven Ragnarok]]></category>

		<guid isPermaLink="false">http://rubyrogues.com/?p=131</guid>
		<description><![CDATA[Panel Steven! Ragnarok (blog/site twitter github) Avdi Grimm (twitter github blog book) Charles Max Wood (twitter github Teach Me To Code) James Edward Gray (blog twitter github) Josh Susser (twitter github blog) Discussed in this Episode Exceptional Ruby (from exceptionalruby.com or pragprog.com) Avdi wrote the book because he felt like he sucked at exceptions Avdi&#8217;s Ruby on Ales talk The method method Array() Hash#fetch raise [...]]]></description>
			<content:encoded><![CDATA[<p></p><h3>Panel</h3>
<ul>
<li>Steven! Ragnarok (<a href="http://blog.nuclearsandwich.com">blog/site</a> <a href="http://twitter.com/#!/_nuclearsammich">twitter</a> <a href="https://github.com/nuclearsandwich">github</a>)</li>
<li>Avdi Grimm (<a href="http://twitter.com/avdi">twitter</a><a href="http://github.com/avdi"> github</a><a href="http://virtuouscode.com/"> blog</a><a href="http://exceptionalruby.com/"> book</a>)</li>
<li>Charles Max Wood (<a href="http://twitter.com/cmaxw">twitter</a><a href="http://github.com/charlesmaxwood"> github</a><a href="http://teachmetocode.com/"> Teach Me To Code</a>)</li>
<li>James Edward Gray (<a href="http://blog.grayproductions.net/">blog</a><a href="http://twitter.com/JEG2"> twitter</a><a href="http://github.com/JEG2"> github</a>)</li>
<li>Josh Susser (<a href="http://twitter.com/joshsusser">twitter</a><a href="http://github.com/joshsusser"> github</a><a href="http://hasmanythrough.com/"> blog</a>)</li>
</ul>
<h3>Discussed in this Episode</h3>
<ul>
<li>Exceptional Ruby (from <a href="http://exceptionalruby.com">exceptionalruby.com</a> or <a href="http://pragprog.com/book/ager/exceptional-ruby">pragprog.com</a>)</li>
<li>Avdi wrote the book because he felt like he sucked at exceptions</li>
<li><a href="http://confreaks.net/videos/523-roa2011-exceptional-ruby">Avdi&#8217;s Ruby on Ales talk</a></li>
<li>The method method</li>
<li><a href="http://ruby-doc.org/core/classes/Kernel.html#M001437">Array()</a></li>
<li><a href="http://www.ruby-doc.org/core/classes/Hash.html#M000728">Hash#fetch</a></li>
<li><a href="http://ruby-doc.org/core/classes/Kernel.html#M001410">raise</a></li>
<li>rescue</li>
<li><a href="http://ruby-doc.org/core/classes/Kernel.html#M001423">warn</a></li>
<li>redefining warn to raise an exception for access to the backtrace</li>
<li>Matching an exception based on the error message</li>
<li>Custom exception matchers</li>
<li>Make an error module and rescues the exceptions and tag them with that module.</li>
<li>Nested Exceptions</li>
<li>Bundling all exceptions raised during an import or unreliable process.</li>
<li>Avdi asked about raising multiple exceptions.</li>
<li>The checklist for raising an exception. &#8220;Are you ready to end the program?&#8221;</li>
<li>rescue $!</li>
<li>nil isn&#8217;t very informative</li>
<li>Special case object &#8211; something benign that represents the actual state of things</li>
<li>begin is probably a code smell</li>
<li>Putting bulkheads in your code</li>
<li>This book should be required reading for gem authors.</li>
<li>James pointed out that the book missed Thread#abort_on_exception</li>
<li>Avdi outlines the process for writing the book</li>
<li><a href="http://orgmode.org/">Emacs org mode</a></li>
<li><a href="http://www.cl.cam.ac.uk/~mgk25/publ-tips/">LaTeX</a></li>
</ul>
<h3>Picks</h3>
<ul>
<li><a href="iolanguage.com">IO programming language</a> (Steven)</li>
<li><a href="http://c2.com/cgi/wiki?WelcomeVisitors">The original wiki c2.com</a> (Josh)</li>
<li><a href="http://tvtropes.org">tvtropes.org</a> (Josh)</li>
<li><a href="http://labnol.blogspot.com/2006/06/how-to-record-skype-conversations.html">How to record Skype conversations</a> (James)</li>
<li><a href="http://www.rogueamoeba.com/audiohijackpro/">Audio Hijack Pro</a> (James)</li>
<li><a href="http://www.conversationsnetwork.org/levelator">Levelator</a> (James)</li>
<li><a href="http://www.hairersoft.com/pro.html">Amadeus Pro</a> (James)</li>
<li><a href="http://www.jmock.org/oopsla2004.pdf">OOPSLA paper on mocking</a> (Avdi)</li>
<li>Binkies</li>
<li><a href="http://www.google.com/url?sa=t&amp;source=web&amp;cd=1&amp;ved=0CB8QFjAA&amp;url=https%3A%2F%2Fmarket.android.com%2Fdetails%3Fid%3Dcom.google.android.apps.maps&amp;ei=j5hrTumBD-eRsALj5q3UBA&amp;usg=AFQjCNFfQgvHxwyrfeZGBiyi-5qap_atFw&amp;sig2=keHPvQMgk7q27oxbwJSWfg">Google Maps for Android</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/RubyRogues/~4/47xBBWYT6sM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://rubyrogues.com/book-club-exceptional-ruby/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
<enclosure url="http://traffic.libsyn.com/rubyrogues/RubyRogues20110907.mp3" length="45584035" type="audio/mpeg"/>
			<itunes:subtitle>Panel  Steven! Ragnarok (blog/site twitter github)   Avdi Grimm (twitter github blog book)   Charles Max Wood (twitter github Teach Me To Code)   James Edward Gray (blog twitter github)   Josh Susser (twitter github blog) - </itunes:subtitle>
		<itunes:summary>Panel

	Steven! Ragnarok (blog/site twitter github)
	Avdi Grimm (twitter github blog book)
	Charles Max Wood (twitter github Teach Me To Code)
	James Edward Gray (blog twitter github)
	Josh Susser (twitter github blog)

Discussed in this Episode

	Exceptional Ruby (from exceptionalruby.com or pragprog.com)
	Avdi wrote the book because he felt like he sucked at exceptions
	Avdi's Ruby on Ales talk
	The method method
	Array()
	Hash#fetch
	raise
	rescue
	warn
	redefining warn to raise an exception for access to the backtrace
	Matching an exception based on the error message
	Custom exception matchers
	Make an error module and rescues the exceptions and tag them with that module.
	Nested Exceptions
	Bundling all exceptions raised during an import or unreliable process.
	Avdi asked about raising multiple exceptions.
	The checklist for raising an exception. "Are you ready to end the program?"
	rescue $!
	nil isn't very informative
	Special case object - something benign that represents the actual state of things
	begin is probably a code smell
	Putting bulkheads in your code
	This book should be required reading for gem authors.
	James pointed out that the book missed Thread#abort_on_exception
	Avdi outlines the process for writing the book
	Emacs org mode
	LaTeX

Picks

	IO programming language (Steven)
	The original wiki c2.com (Josh)
	tvtropes.org (Josh)
	How to record Skype conversations (James)
	Audio Hijack Pro (James)
	Levelator (James)
	Amadeus Pro (James)
	OOPSLA paper on mocking (Avdi)
	Binkies
	Google Maps for Android</itunes:summary>
		<itunes:author>Ruby Rogues</itunes:author>
		<itunes:explicit>no</itunes:explicit>
		<itunes:duration>1:00:40</itunes:duration>
	<media:content url="http://traffic.libsyn.com/rubyrogues/RubyRogues20110907.mp3" fileSize="45584035" type="audio/mpeg"/><itunes:keywords>ruby,rails,rspec,cucumber,testing,James,Edward,Gray,Charles,Max,Wood,programming,development,developer,panel,fun,funny,David,Brady</itunes:keywords><feedburner:origLink>http://rubyrogues.com/book-club-exceptional-ruby/</feedburner:origLink></item>